package MethodsLesson15;

public class MethodsLesson15 {
    public static void main(String[] args) {
        People people = new People();       // Это объект со своим именем и возрастом
        people.name = "Роман";
        people.age = 50;

        people.sayHello();

        People people1 = new People();      // каждый из них являются объектами класса People
        people1.name = "Вова";
        people1.age = 20;

        people1.speak();                    // Вызываем метод speak из другого класса , класс People
        people1.sayHello();                // Для этого пишем имя нашего объекта(это people1) точка и имя метода с параметрами

    }
}
class People{
    String name;
    int age;

    void speak() {
        for (int i = 0; i < 3; i++) {
            System.out.println("Меня зовут " + name + ", мне  " + age + " лет ");  // выведем на экран приветствие через цикл for
        }                                                                  // разница между этими методами в том, что первому методу
    }                                                     // нужны для работы поля (данные), а второму методу не нужны


    void sayHello(){                                       // напишем ещё один метод
        System.out.println("Привет!");
    }
}/* Мы можем создать сколько угодно объектов , но при вызове метода sayHello
будет выводиться приветствие  */
/*Классы пишем с большой буквы, а методы пишем с маленькой буквы, но после первого  слова в имене метода
каждое слово пишется с большой буквы void sayHello(){}
 */
/* Методы можно сколько угодно раз вызывать, вызов метода неограничен  */
/* В методе main вызываем метод speak */
/* Помимо того , что у человека могут быть какие-то характеристики ,  он может что-то делать,
у него могут быть какие-то действия которые может совершать
 */
/* мы можем одно действие поместить в класс Person , чтобы оно выводило для всех объектов текст,
чтобы они могли представиться, мы можем просто вызвать метод на объекте
 */
/* создаём метод пишем для начала void затем пишем имя метода speak (например говорить)
затем ставим параметры метода, это у нас круглые скобки()
поместим внутри метода System.out.println();
void speak(){
System.out.println("Меня зовут " + name + ",мне " + age + " лет ");
}
Обратите внимание, что нам не нужно связывать поля и методы
Они уже связаны внутри одного класса , поля и методы знают о существовании друг друга
 */
/* Теперь у каждого объекта класса People есть метод speak , который выводит имя и возраст
Чтобы выполнить метод нужно его вызвать */