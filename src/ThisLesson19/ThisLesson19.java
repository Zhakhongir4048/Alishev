package ThisLesson19;

public class ThisLesson19 {
    public static void main(String[] args)
    {
        Human human = new Human();
        human.setAge(18);
        human.setName("Tom");
        human.getInfo();


        Human human1 = new Human();
        human1.setAge(25);
        human1.setName("Bob");
        human1.getInfo();
    }
}
class Human {
    String name;
    int age;

    public void setName(String name){         // Переменная видна только в пределах своих скобок
        this.name = name;
    }

    public void setAge(int age){
        this.age = age;
    }

    public String getName(){
        return name;
    }

    public int getAge(){
        return age;
    }

    public void getInfo(){
        System.out.println(name + "," +  age);
    }

}
/* Самое важное понять, что this используется в сеттерах
/* this - это ключевое слово , который вызывает объект внутри класса
У нас есть класс Human и есть объект human в методе main, который был создан по шаблону класса Human
у этого human его зовут Tom и ему 18 лет , внутри класса Human мы с помощью ключевого слова this
обращаемся к переменным именно объекта human
Вызывая this.name мы вызываем на самом деле human.name
Вызывая this.age мы на самом деле вызываем human.age
this - это способ обратиться внутри класса к объекту этого класса
Если у нас будет ещё один объект этого класса например human1
у этого объекта сделаем вызов метода setName, мы обратимся к объекту human1
 */
/* В параметрах имя метода может быть любым, оно действует, оно распространяется только внутри метода этого */
/* Переменная видна в пределах своих фигурных скобок
myName видна в пределах метода setName , эту переменную мы могли назвать как угодно
 */
/* мы можем вызвать метод getInfo у класса Human */
/* Было бы логично называть в параметрах сеттера переменные так, как на поле этого же класса , только возникает
вопрос? Имя в параметрах сеттера совпадает с именем поле класса
Одна переменная принадлежит полю класса
Другая переменная принадлежит методу сеттеру , Java не знает какую вы переменную имеете в виду
она берёт самую близкую, которая в параметре сеттера
Из-за этого нам нужен какой-то способ отличить переменную которая в поле от переменной метода сеттера
ДЛЯ ЭТОГО ЕСТЬ СЛОВО this
this - оно указывает, это имя, этот возраст
если мы поставим ключевое слово this перед name всё заработает
 public void setName(String name)
    {
        this.name = name;
    }

 */
/* Чтобы внутри метода в классе обратиться к полю  переменному класса
мы должны написать this.name (name он в поле класса находится)
Так обычно делают в set методах
 */