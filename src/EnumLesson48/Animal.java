package EnumLesson48;



public enum Animal {
    DOG("собака"), CAT("кошка"), FROG("лягушка");
    // Полностью эквивалентно если мы сделали вот так new DOG("собака");
    private String translation;

    // Конструктор по умолчанию теперь не работает, так как, мы создали свой конструктор, мы обязаны теперь перечисления (объекты в инаме Animal) записать с переводом

      /* Необязательно писать с большими буквами, просто это конвенция используется потому, что все эти
       объекты перечисления являются константами, тем более они статические */

      /* Как мы можем использовать тот факт, что все инамы у нас являются объектами своего типа
      Мы можем создать например конструктор в инаме */

      /* Обычно конструктор в инамах делаются приватными, потому, что в данном случае нам не нужно создавать объекты инама
      Animal вне этого инама, все объекты инама Animal (DOG, CAT, FROG) создаются самой Java внутри этого инама */
      /* Когда создаем конструктор , то в перечислениях нужно поставить точку с запятой! ЕСЛИ конструктора нет, то можно и не ставить
       DOG, CAT, FROG; */

    Animal(String translation) {                  // У всех наших перечисления Animal будет перевод на русский язык
     this.translation = translation;             // private необязательно писать в конструкторе инама, по умолчанию он приватный
    }


    public String getTranslation(){
        return translation;
    }

     // МЫ ТАКЖЕ МОЖЕМ ПЕРЕОПРЕДЕЛЯТЬ МЕТОДЫ КЛАССА OBJECT В ИНАМЕ!


    @Override
    public String toString() {
        return "Перевод на русский язык " + translation;
    }
}
