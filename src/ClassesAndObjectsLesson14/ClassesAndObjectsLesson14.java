package ClassesAndObjectsLesson14;

public class ClassesAndObjectsLesson14 {
    public static void main(String[] args)
    {
        Person person = new Person();       //Это объект со своим именем и возрастом
        person.name = "Рома";
        person.age = 50;

        System.out.println("Меня зовут " + person.name + ", мне  " + person.age + " лет ");

        Person person1 = new Person();      // Каждый из них является объектами класса Person
        person1.name = "Вова";
        person1.age = 20;

        System.out.println("Меня зовут " + person1.name + ", мне  " + person1.age + " лет ");
    }
}
class Person{
    String name;
    int age;
}
/* У класса могут быть
1) Поля(данные) (Например у класса человек: возраст, вес, цвет глаз, имя, фамилие)
2) Методы(действия, которые он может совершать) (Например у класса человек: говорить, прыгать , бегать)
 */
/* Класс- это шаблон , это общее понятие , пример из жизни человек(класс), я,ты,он(объекты класса человека)
/* метод main - это та точка, с которой начинается исполнение программы
то есть это входная точка программы
в методе main уже вызываются другие методы и делаются все различные вещи
программа стартует именно с метода main
 */
/* Имя класса должно начинаться с большой буквы
Каждое новое слово в имени класса начинается с большой буквы  */
/* класс публичный, это говорит слово public перед словом класс */
/* публичный класс- это главный класс в Java файле
В Java файле может быть несколько классов,любое количество классов
 */
/* public class - главный класс, а class test , class test2 - вспомогательные классы
отличие публичного класса от вспомогательного в том, что публичный класс может быть только один,
а вспомогательных сколько угодно
 */
/* имя публичного класса должен соответствовать имени  Java файла */
/* сделаем так чтобы у всех людей было имя String name;
/*
Класс можно рассматривать как некий тип данных (integer, double -это всё типы данных)
а класс- это такой тип данных , который мы сами создали
мы сначала указываем тип данных Person d - это переменная сложного типа Person
переменную d мы ссылаем на новый объект класса Person
у переменной d , может быть имя и возраст
Мы получаем доступ к полям класса Person через точку
У всех объектов, которые будут создаваться из этого класса Person обязательно
будут  имена  и возрасты
В методе main создадим несколько людей (объекты) из класса Person  */